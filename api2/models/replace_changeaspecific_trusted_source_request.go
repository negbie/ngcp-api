// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ReplaceChangeaspecificTrustedSourceRequest Replace/changeaspecificTrustedSourceRequest
//
// swagger:model Replace/changeaspecificTrustedSourceRequest
type ReplaceChangeaspecificTrustedSourceRequest struct {

	// from pattern
	// Required: true
	FromPattern *string `json:"from_pattern"`

	// protocol
	// Required: true
	Protocol *string `json:"protocol"`

	// src ip
	// Required: true
	SrcIP *string `json:"src_ip"`

	// subscriber id
	// Required: true
	SubscriberID *string `json:"subscriber_id"`
}

// Validate validates this replace changeaspecific trusted source request
func (m *ReplaceChangeaspecificTrustedSourceRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFromPattern(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProtocol(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSrcIP(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSubscriberID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ReplaceChangeaspecificTrustedSourceRequest) validateFromPattern(formats strfmt.Registry) error {

	if err := validate.Required("from_pattern", "body", m.FromPattern); err != nil {
		return err
	}

	return nil
}

func (m *ReplaceChangeaspecificTrustedSourceRequest) validateProtocol(formats strfmt.Registry) error {

	if err := validate.Required("protocol", "body", m.Protocol); err != nil {
		return err
	}

	return nil
}

func (m *ReplaceChangeaspecificTrustedSourceRequest) validateSrcIP(formats strfmt.Registry) error {

	if err := validate.Required("src_ip", "body", m.SrcIP); err != nil {
		return err
	}

	return nil
}

func (m *ReplaceChangeaspecificTrustedSourceRequest) validateSubscriberID(formats strfmt.Registry) error {

	if err := validate.Required("subscriber_id", "body", m.SubscriberID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ReplaceChangeaspecificTrustedSourceRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ReplaceChangeaspecificTrustedSourceRequest) UnmarshalBinary(b []byte) error {
	var res ReplaceChangeaspecificTrustedSourceRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
