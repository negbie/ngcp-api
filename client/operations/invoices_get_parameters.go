// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewInvoicesGetParams creates a new InvoicesGetParams object
// with the default values initialized.
func NewInvoicesGetParams() *InvoicesGetParams {
	var ()
	return &InvoicesGetParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewInvoicesGetParamsWithTimeout creates a new InvoicesGetParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewInvoicesGetParamsWithTimeout(timeout time.Duration) *InvoicesGetParams {
	var ()
	return &InvoicesGetParams{

		timeout: timeout,
	}
}

// NewInvoicesGetParamsWithContext creates a new InvoicesGetParams object
// with the default values initialized, and the ability to set a context for a request
func NewInvoicesGetParamsWithContext(ctx context.Context) *InvoicesGetParams {
	var ()
	return &InvoicesGetParams{

		Context: ctx,
	}
}

// NewInvoicesGetParamsWithHTTPClient creates a new InvoicesGetParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewInvoicesGetParamsWithHTTPClient(client *http.Client) *InvoicesGetParams {
	var ()
	return &InvoicesGetParams{
		HTTPClient: client,
	}
}

/*InvoicesGetParams contains all the parameters to send to the API endpoint
for the invoices get operation typically these are written to a http.Request
*/
type InvoicesGetParams struct {

	/*CustomerID
	  Filter for invoices belonging to a specific customer

	*/
	CustomerID string
	/*OrderBy
	  Order collection by a specific attribute.

	*/
	OrderBy string
	/*OrderByDirection
	  Direction which the collection should be ordered by. Possible values are: asc (default), desc.

	*/
	OrderByDirection string
	/*Page
	  Pagination page which should be displayed (default: 1)

	*/
	Page string
	/*PeriodEndLe
	  Filter for invoices older or equal to the given date (YYYY-MM-DDThh:mm:ss)

	*/
	PeriodEndLe string
	/*PeriodStartGe
	  Filter for invoices newer or equal to the given date (YYYY-MM-DDThh:mm:ss)

	*/
	PeriodStartGe string
	/*ResellerID
	  Filter for invoices of customers belonging to a certain reseller

	*/
	ResellerID string
	/*Rows
	  Number of rows in one pagination page (default: 10)

	*/
	Rows string
	/*Serial
	  Filter for invoices matching a serial (patterns allowed)

	*/
	Serial string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the invoices get params
func (o *InvoicesGetParams) WithTimeout(timeout time.Duration) *InvoicesGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the invoices get params
func (o *InvoicesGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the invoices get params
func (o *InvoicesGetParams) WithContext(ctx context.Context) *InvoicesGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the invoices get params
func (o *InvoicesGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the invoices get params
func (o *InvoicesGetParams) WithHTTPClient(client *http.Client) *InvoicesGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the invoices get params
func (o *InvoicesGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCustomerID adds the customerID to the invoices get params
func (o *InvoicesGetParams) WithCustomerID(customerID string) *InvoicesGetParams {
	o.SetCustomerID(customerID)
	return o
}

// SetCustomerID adds the customerId to the invoices get params
func (o *InvoicesGetParams) SetCustomerID(customerID string) {
	o.CustomerID = customerID
}

// WithOrderBy adds the orderBy to the invoices get params
func (o *InvoicesGetParams) WithOrderBy(orderBy string) *InvoicesGetParams {
	o.SetOrderBy(orderBy)
	return o
}

// SetOrderBy adds the orderBy to the invoices get params
func (o *InvoicesGetParams) SetOrderBy(orderBy string) {
	o.OrderBy = orderBy
}

// WithOrderByDirection adds the orderByDirection to the invoices get params
func (o *InvoicesGetParams) WithOrderByDirection(orderByDirection string) *InvoicesGetParams {
	o.SetOrderByDirection(orderByDirection)
	return o
}

// SetOrderByDirection adds the orderByDirection to the invoices get params
func (o *InvoicesGetParams) SetOrderByDirection(orderByDirection string) {
	o.OrderByDirection = orderByDirection
}

// WithPage adds the page to the invoices get params
func (o *InvoicesGetParams) WithPage(page string) *InvoicesGetParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the invoices get params
func (o *InvoicesGetParams) SetPage(page string) {
	o.Page = page
}

// WithPeriodEndLe adds the periodEndLe to the invoices get params
func (o *InvoicesGetParams) WithPeriodEndLe(periodEndLe string) *InvoicesGetParams {
	o.SetPeriodEndLe(periodEndLe)
	return o
}

// SetPeriodEndLe adds the periodEndLe to the invoices get params
func (o *InvoicesGetParams) SetPeriodEndLe(periodEndLe string) {
	o.PeriodEndLe = periodEndLe
}

// WithPeriodStartGe adds the periodStartGe to the invoices get params
func (o *InvoicesGetParams) WithPeriodStartGe(periodStartGe string) *InvoicesGetParams {
	o.SetPeriodStartGe(periodStartGe)
	return o
}

// SetPeriodStartGe adds the periodStartGe to the invoices get params
func (o *InvoicesGetParams) SetPeriodStartGe(periodStartGe string) {
	o.PeriodStartGe = periodStartGe
}

// WithResellerID adds the resellerID to the invoices get params
func (o *InvoicesGetParams) WithResellerID(resellerID string) *InvoicesGetParams {
	o.SetResellerID(resellerID)
	return o
}

// SetResellerID adds the resellerId to the invoices get params
func (o *InvoicesGetParams) SetResellerID(resellerID string) {
	o.ResellerID = resellerID
}

// WithRows adds the rows to the invoices get params
func (o *InvoicesGetParams) WithRows(rows string) *InvoicesGetParams {
	o.SetRows(rows)
	return o
}

// SetRows adds the rows to the invoices get params
func (o *InvoicesGetParams) SetRows(rows string) {
	o.Rows = rows
}

// WithSerial adds the serial to the invoices get params
func (o *InvoicesGetParams) WithSerial(serial string) *InvoicesGetParams {
	o.SetSerial(serial)
	return o
}

// SetSerial adds the serial to the invoices get params
func (o *InvoicesGetParams) SetSerial(serial string) {
	o.Serial = serial
}

// WriteToRequest writes these params to a swagger request
func (o *InvoicesGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param customer_id
	qrCustomerID := o.CustomerID
	qCustomerID := qrCustomerID
	if qCustomerID != "" {
		if err := r.SetQueryParam("customer_id", qCustomerID); err != nil {
			return err
		}
	}

	// query param order_by
	qrOrderBy := o.OrderBy
	qOrderBy := qrOrderBy
	if qOrderBy != "" {
		if err := r.SetQueryParam("order_by", qOrderBy); err != nil {
			return err
		}
	}

	// query param order_by_direction
	qrOrderByDirection := o.OrderByDirection
	qOrderByDirection := qrOrderByDirection
	if qOrderByDirection != "" {
		if err := r.SetQueryParam("order_by_direction", qOrderByDirection); err != nil {
			return err
		}
	}

	// query param page
	qrPage := o.Page
	qPage := qrPage
	if qPage != "" {
		if err := r.SetQueryParam("page", qPage); err != nil {
			return err
		}
	}

	// query param period_end_le
	qrPeriodEndLe := o.PeriodEndLe
	qPeriodEndLe := qrPeriodEndLe
	if qPeriodEndLe != "" {
		if err := r.SetQueryParam("period_end_le", qPeriodEndLe); err != nil {
			return err
		}
	}

	// query param period_start_ge
	qrPeriodStartGe := o.PeriodStartGe
	qPeriodStartGe := qrPeriodStartGe
	if qPeriodStartGe != "" {
		if err := r.SetQueryParam("period_start_ge", qPeriodStartGe); err != nil {
			return err
		}
	}

	// query param reseller_id
	qrResellerID := o.ResellerID
	qResellerID := qrResellerID
	if qResellerID != "" {
		if err := r.SetQueryParam("reseller_id", qResellerID); err != nil {
			return err
		}
	}

	// query param rows
	qrRows := o.Rows
	qRows := qrRows
	if qRows != "" {
		if err := r.SetQueryParam("rows", qRows); err != nil {
			return err
		}
	}

	// query param serial
	qrSerial := o.Serial
	qSerial := qrSerial
	if qSerial != "" {
		if err := r.SetQueryParam("serial", qSerial); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
