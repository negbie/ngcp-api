// Code generated by go-swagger; DO NOT EDIT.

package nr_id

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/negbie/ngcp-api1/models"
)

// GetaspecificInterceptionReader is a Reader for the GetaspecificInterception structure.
type GetaspecificInterceptionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetaspecificInterceptionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetaspecificInterceptionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetaspecificInterceptionOK creates a GetaspecificInterceptionOK with default headers values
func NewGetaspecificInterceptionOK() *GetaspecificInterceptionOK {
	return &GetaspecificInterceptionOK{}
}

/*GetaspecificInterceptionOK handles this case with default header values.

GetaspecificInterceptionOK getaspecific interception o k
*/
type GetaspecificInterceptionOK struct {
	Payload *models.Interceptions
}

func (o *GetaspecificInterceptionOK) Error() string {
	return fmt.Sprintf("[GET /interceptions/{id}][%d] getaspecificInterceptionOK  %+v", 200, o.Payload)
}

func (o *GetaspecificInterceptionOK) GetPayload() *models.Interceptions {
	return o.Payload
}

func (o *GetaspecificInterceptionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Interceptions)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
