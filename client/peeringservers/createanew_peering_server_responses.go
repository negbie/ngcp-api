// Code generated by go-swagger; DO NOT EDIT.

package peeringservers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/negbie/ngcp-api/models"
)

// CreateanewPeeringServerReader is a Reader for the CreateanewPeeringServer structure.
type CreateanewPeeringServerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateanewPeeringServerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateanewPeeringServerCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 422:
		result := NewCreateanewPeeringServerUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateanewPeeringServerCreated creates a CreateanewPeeringServerCreated with default headers values
func NewCreateanewPeeringServerCreated() *CreateanewPeeringServerCreated {
	return &CreateanewPeeringServerCreated{
		Location: "nostrud velit non",
	}
}

/*CreateanewPeeringServerCreated handles this case with default header values.

CreateanewPeeringServerCreated createanew peering server created
*/
type CreateanewPeeringServerCreated struct {
	Location string

	Payload []*models.Thenewlycreateditemorempty19
}

func (o *CreateanewPeeringServerCreated) Error() string {
	return fmt.Sprintf("[POST /peeringservers][%d] createanewPeeringServerCreated  %+v", 201, o.Payload)
}

func (o *CreateanewPeeringServerCreated) GetPayload() []*models.Thenewlycreateditemorempty19 {
	return o.Payload
}

func (o *CreateanewPeeringServerCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Location
	o.Location = response.GetHeader("Location")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateanewPeeringServerUnprocessableEntity creates a CreateanewPeeringServerUnprocessableEntity with default headers values
func NewCreateanewPeeringServerUnprocessableEntity() *CreateanewPeeringServerUnprocessableEntity {
	return &CreateanewPeeringServerUnprocessableEntity{}
}

/*CreateanewPeeringServerUnprocessableEntity handles this case with default header values.

Unprocessable Entity (WebDAV) (RFC 4918)
*/
type CreateanewPeeringServerUnprocessableEntity struct {
	Payload *models.Anerror
}

func (o *CreateanewPeeringServerUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /peeringservers][%d] createanewPeeringServerUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *CreateanewPeeringServerUnprocessableEntity) GetPayload() *models.Anerror {
	return o.Payload
}

func (o *CreateanewPeeringServerUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Anerror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
