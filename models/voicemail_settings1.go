// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// VoicemailSettings1 VoicemailSettings1
// swagger:model VoicemailSettings1
type VoicemailSettings1 struct {

	// attach
	// Required: true
	Attach *string `json:"attach"`

	// delete
	// Required: true
	Delete *string `json:"delete"`

	// pin
	// Required: true
	Pin *string `json:"pin"`

	// sms number
	// Required: true
	SmsNumber *string `json:"sms_number"`
}

// Validate validates this voicemail settings1
func (m *VoicemailSettings1) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAttach(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDelete(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePin(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSmsNumber(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *VoicemailSettings1) validateAttach(formats strfmt.Registry) error {

	if err := validate.Required("attach", "body", m.Attach); err != nil {
		return err
	}

	return nil
}

func (m *VoicemailSettings1) validateDelete(formats strfmt.Registry) error {

	if err := validate.Required("delete", "body", m.Delete); err != nil {
		return err
	}

	return nil
}

func (m *VoicemailSettings1) validatePin(formats strfmt.Registry) error {

	if err := validate.Required("pin", "body", m.Pin); err != nil {
		return err
	}

	return nil
}

func (m *VoicemailSettings1) validateSmsNumber(formats strfmt.Registry) error {

	if err := validate.Required("sms_number", "body", m.SmsNumber); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *VoicemailSettings1) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VoicemailSettings1) UnmarshalBinary(b []byte) error {
	var res VoicemailSettings1
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
