// Code generated by go-swagger; DO NOT EDIT.

package domains

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetDomainitemsParams creates a new GetDomainitemsParams object
// with the default values initialized.
func NewGetDomainitemsParams() *GetDomainitemsParams {
	var ()
	return &GetDomainitemsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetDomainitemsParamsWithTimeout creates a new GetDomainitemsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetDomainitemsParamsWithTimeout(timeout time.Duration) *GetDomainitemsParams {
	var ()
	return &GetDomainitemsParams{

		timeout: timeout,
	}
}

// NewGetDomainitemsParamsWithContext creates a new GetDomainitemsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetDomainitemsParamsWithContext(ctx context.Context) *GetDomainitemsParams {
	var ()
	return &GetDomainitemsParams{

		Context: ctx,
	}
}

// NewGetDomainitemsParamsWithHTTPClient creates a new GetDomainitemsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetDomainitemsParamsWithHTTPClient(client *http.Client) *GetDomainitemsParams {
	var ()
	return &GetDomainitemsParams{
		HTTPClient: client,
	}
}

/*GetDomainitemsParams contains all the parameters to send to the API endpoint
for the get domainitems operation typically these are written to a http.Request
*/
type GetDomainitemsParams struct {

	/*Domain
	  Filter for domains matching the given pattern

	*/
	Domain string
	/*OrderBy
	  Order collection by a specific attribute.

	*/
	OrderBy string
	/*OrderByDirection
	  Direction which the collection should be ordered by. Possible values are: asc (default), desc.

	*/
	OrderByDirection string
	/*Page
	  Pagination page which should be displayed (default: 1)

	*/
	Page string
	/*ResellerID
	  Filter for domains belonging to a specific reseller

	*/
	ResellerID string
	/*Rows
	  Number of rows in one pagination page (default: 10)

	*/
	Rows string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get domainitems params
func (o *GetDomainitemsParams) WithTimeout(timeout time.Duration) *GetDomainitemsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get domainitems params
func (o *GetDomainitemsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get domainitems params
func (o *GetDomainitemsParams) WithContext(ctx context.Context) *GetDomainitemsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get domainitems params
func (o *GetDomainitemsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get domainitems params
func (o *GetDomainitemsParams) WithHTTPClient(client *http.Client) *GetDomainitemsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get domainitems params
func (o *GetDomainitemsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDomain adds the domain to the get domainitems params
func (o *GetDomainitemsParams) WithDomain(domain string) *GetDomainitemsParams {
	o.SetDomain(domain)
	return o
}

// SetDomain adds the domain to the get domainitems params
func (o *GetDomainitemsParams) SetDomain(domain string) {
	o.Domain = domain
}

// WithOrderBy adds the orderBy to the get domainitems params
func (o *GetDomainitemsParams) WithOrderBy(orderBy string) *GetDomainitemsParams {
	o.SetOrderBy(orderBy)
	return o
}

// SetOrderBy adds the orderBy to the get domainitems params
func (o *GetDomainitemsParams) SetOrderBy(orderBy string) {
	o.OrderBy = orderBy
}

// WithOrderByDirection adds the orderByDirection to the get domainitems params
func (o *GetDomainitemsParams) WithOrderByDirection(orderByDirection string) *GetDomainitemsParams {
	o.SetOrderByDirection(orderByDirection)
	return o
}

// SetOrderByDirection adds the orderByDirection to the get domainitems params
func (o *GetDomainitemsParams) SetOrderByDirection(orderByDirection string) {
	o.OrderByDirection = orderByDirection
}

// WithPage adds the page to the get domainitems params
func (o *GetDomainitemsParams) WithPage(page string) *GetDomainitemsParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the get domainitems params
func (o *GetDomainitemsParams) SetPage(page string) {
	o.Page = page
}

// WithResellerID adds the resellerID to the get domainitems params
func (o *GetDomainitemsParams) WithResellerID(resellerID string) *GetDomainitemsParams {
	o.SetResellerID(resellerID)
	return o
}

// SetResellerID adds the resellerId to the get domainitems params
func (o *GetDomainitemsParams) SetResellerID(resellerID string) {
	o.ResellerID = resellerID
}

// WithRows adds the rows to the get domainitems params
func (o *GetDomainitemsParams) WithRows(rows string) *GetDomainitemsParams {
	o.SetRows(rows)
	return o
}

// SetRows adds the rows to the get domainitems params
func (o *GetDomainitemsParams) SetRows(rows string) {
	o.Rows = rows
}

// WriteToRequest writes these params to a swagger request
func (o *GetDomainitemsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param domain
	qrDomain := o.Domain
	qDomain := qrDomain
	if qDomain != "" {
		if err := r.SetQueryParam("domain", qDomain); err != nil {
			return err
		}
	}

	// query param order_by
	qrOrderBy := o.OrderBy
	qOrderBy := qrOrderBy
	if qOrderBy != "" {
		if err := r.SetQueryParam("order_by", qOrderBy); err != nil {
			return err
		}
	}

	// query param order_by_direction
	qrOrderByDirection := o.OrderByDirection
	qOrderByDirection := qrOrderByDirection
	if qOrderByDirection != "" {
		if err := r.SetQueryParam("order_by_direction", qOrderByDirection); err != nil {
			return err
		}
	}

	// query param page
	qrPage := o.Page
	qPage := qrPage
	if qPage != "" {
		if err := r.SetQueryParam("page", qPage); err != nil {
			return err
		}
	}

	// query param reseller_id
	qrResellerID := o.ResellerID
	qResellerID := qrResellerID
	if qResellerID != "" {
		if err := r.SetQueryParam("reseller_id", qResellerID); err != nil {
			return err
		}
	}

	// query param rows
	qrRows := o.Rows
	qRows := qrRows
	if qRows != "" {
		if err := r.SetQueryParam("rows", qRows); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
