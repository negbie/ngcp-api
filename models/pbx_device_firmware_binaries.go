// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PbxDeviceFirmwareBinaries PbxDeviceFirmwareBinaries
// swagger:model PbxDeviceFirmwareBinaries
type PbxDeviceFirmwareBinaries struct {

	// device id
	// Required: true
	DeviceID *string `json:"device_id"`

	// filename
	// Required: true
	Filename *string `json:"filename"`

	// tag
	// Required: true
	Tag *string `json:"tag"`

	// version
	// Required: true
	Version *string `json:"version"`
}

// Validate validates this pbx device firmware binaries
func (m *PbxDeviceFirmwareBinaries) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDeviceID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFilename(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTag(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateVersion(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PbxDeviceFirmwareBinaries) validateDeviceID(formats strfmt.Registry) error {

	if err := validate.Required("device_id", "body", m.DeviceID); err != nil {
		return err
	}

	return nil
}

func (m *PbxDeviceFirmwareBinaries) validateFilename(formats strfmt.Registry) error {

	if err := validate.Required("filename", "body", m.Filename); err != nil {
		return err
	}

	return nil
}

func (m *PbxDeviceFirmwareBinaries) validateTag(formats strfmt.Registry) error {

	if err := validate.Required("tag", "body", m.Tag); err != nil {
		return err
	}

	return nil
}

func (m *PbxDeviceFirmwareBinaries) validateVersion(formats strfmt.Registry) error {

	if err := validate.Required("version", "body", m.Version); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PbxDeviceFirmwareBinaries) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PbxDeviceFirmwareBinaries) UnmarshalBinary(b []byte) error {
	var res PbxDeviceFirmwareBinaries
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
