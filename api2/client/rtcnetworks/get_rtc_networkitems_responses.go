// Code generated by go-swagger; DO NOT EDIT.

package rtcnetworks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/negbie/ngcp-api/models"
)

// GetRtcNetworkitemsReader is a Reader for the GetRtcNetworkitems structure.
type GetRtcNetworkitemsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRtcNetworkitemsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRtcNetworkitemsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetRtcNetworkitemsOK creates a GetRtcNetworkitemsOK with default headers values
func NewGetRtcNetworkitemsOK() *GetRtcNetworkitemsOK {
	return &GetRtcNetworkitemsOK{}
}

/*GetRtcNetworkitemsOK handles this case with default header values.

GetRtcNetworkitemsOK get rtc networkitems o k
*/
type GetRtcNetworkitemsOK struct {
	Payload []*models.RtcNetworks
}

func (o *GetRtcNetworkitemsOK) Error() string {
	return fmt.Sprintf("[GET /rtcnetworks][%d] getRtcNetworkitemsOK  %+v", 200, o.Payload)
}

func (o *GetRtcNetworkitemsOK) GetPayload() []*models.RtcNetworks {
	return o.Payload
}

func (o *GetRtcNetworkitemsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
