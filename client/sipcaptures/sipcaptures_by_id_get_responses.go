// Code generated by go-swagger; DO NOT EDIT.

package sipcaptures

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/negbie/ngcp-api/models"
)

// SipcapturesByIDGetReader is a Reader for the SipcapturesByIDGet structure.
type SipcapturesByIDGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SipcapturesByIDGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSipcapturesByIDGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSipcapturesByIDGetOK creates a SipcapturesByIDGetOK with default headers values
func NewSipcapturesByIDGetOK() *SipcapturesByIDGetOK {
	return &SipcapturesByIDGetOK{}
}

/*SipcapturesByIDGetOK handles this case with default header values.

SipcapturesByIDGetOK sipcaptures by Id get o k
*/
type SipcapturesByIDGetOK struct {
	Payload *models.SIPCaptures
}

func (o *SipcapturesByIDGetOK) Error() string {
	return fmt.Sprintf("[GET /sipcaptures/{id}][%d] sipcapturesByIdGetOK  %+v", 200, o.Payload)
}

func (o *SipcapturesByIDGetOK) GetPayload() *models.SIPCaptures {
	return o.Payload
}

func (o *SipcapturesByIDGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SIPCaptures)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
