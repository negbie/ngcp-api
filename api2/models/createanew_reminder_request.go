// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateanewReminderRequest CreateanewReminderRequest
//
// swagger:model CreateanewReminderRequest
type CreateanewReminderRequest struct {

	// active
	// Required: true
	Active *string `json:"active"`

	// recur
	// Required: true
	Recur *string `json:"recur"`

	// subscriber id
	// Required: true
	SubscriberID *string `json:"subscriber_id"`

	// time
	// Required: true
	Time *string `json:"time"`
}

// Validate validates this createanew reminder request
func (m *CreateanewReminderRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateActive(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRecur(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSubscriberID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTime(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateanewReminderRequest) validateActive(formats strfmt.Registry) error {

	if err := validate.Required("active", "body", m.Active); err != nil {
		return err
	}

	return nil
}

func (m *CreateanewReminderRequest) validateRecur(formats strfmt.Registry) error {

	if err := validate.Required("recur", "body", m.Recur); err != nil {
		return err
	}

	return nil
}

func (m *CreateanewReminderRequest) validateSubscriberID(formats strfmt.Registry) error {

	if err := validate.Required("subscriber_id", "body", m.SubscriberID); err != nil {
		return err
	}

	return nil
}

func (m *CreateanewReminderRequest) validateTime(formats strfmt.Registry) error {

	if err := validate.Required("time", "body", m.Time); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CreateanewReminderRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateanewReminderRequest) UnmarshalBinary(b []byte) error {
	var res CreateanewReminderRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
