// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Key2 Key2
//
// swagger:model Key2
type Key2 struct {

	// labelpos
	// Required: true
	Labelpos *string `json:"labelpos"`

	// x
	// Required: true
	X *float64 `json:"x"`

	// y
	// Required: true
	Y *float64 `json:"y"`
}

// Validate validates this key2
func (m *Key2) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLabelpos(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateX(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateY(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Key2) validateLabelpos(formats strfmt.Registry) error {

	if err := validate.Required("labelpos", "body", m.Labelpos); err != nil {
		return err
	}

	return nil
}

func (m *Key2) validateX(formats strfmt.Registry) error {

	if err := validate.Required("x", "body", m.X); err != nil {
		return err
	}

	return nil
}

func (m *Key2) validateY(formats strfmt.Registry) error {

	if err := validate.Required("y", "body", m.Y); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Key2) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Key2) UnmarshalBinary(b []byte) error {
	var res Key2
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
