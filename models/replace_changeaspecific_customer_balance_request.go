// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ReplaceChangeaspecificCustomerBalanceRequest Replace/changeaspecificCustomerBalanceRequest
//
// swagger:model Replace/changeaspecificCustomerBalanceRequest
type ReplaceChangeaspecificCustomerBalanceRequest struct {

	// cash balance
	// Required: true
	CashBalance *string `json:"cash_balance"`

	// cash debit
	// Required: true
	CashDebit *string `json:"cash_debit"`

	// free time balance
	// Required: true
	FreeTimeBalance *string `json:"free_time_balance"`

	// free time spent
	// Required: true
	FreeTimeSpent *string `json:"free_time_spent"`

	// ratio
	// Required: true
	Ratio *string `json:"ratio"`
}

// Validate validates this replace changeaspecific customer balance request
func (m *ReplaceChangeaspecificCustomerBalanceRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCashBalance(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCashDebit(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFreeTimeBalance(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFreeTimeSpent(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRatio(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ReplaceChangeaspecificCustomerBalanceRequest) validateCashBalance(formats strfmt.Registry) error {

	if err := validate.Required("cash_balance", "body", m.CashBalance); err != nil {
		return err
	}

	return nil
}

func (m *ReplaceChangeaspecificCustomerBalanceRequest) validateCashDebit(formats strfmt.Registry) error {

	if err := validate.Required("cash_debit", "body", m.CashDebit); err != nil {
		return err
	}

	return nil
}

func (m *ReplaceChangeaspecificCustomerBalanceRequest) validateFreeTimeBalance(formats strfmt.Registry) error {

	if err := validate.Required("free_time_balance", "body", m.FreeTimeBalance); err != nil {
		return err
	}

	return nil
}

func (m *ReplaceChangeaspecificCustomerBalanceRequest) validateFreeTimeSpent(formats strfmt.Registry) error {

	if err := validate.Required("free_time_spent", "body", m.FreeTimeSpent); err != nil {
		return err
	}

	return nil
}

func (m *ReplaceChangeaspecificCustomerBalanceRequest) validateRatio(formats strfmt.Registry) error {

	if err := validate.Required("ratio", "body", m.Ratio); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ReplaceChangeaspecificCustomerBalanceRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ReplaceChangeaspecificCustomerBalanceRequest) UnmarshalBinary(b []byte) error {
	var res ReplaceChangeaspecificCustomerBalanceRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
