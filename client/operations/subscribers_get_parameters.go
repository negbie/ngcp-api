// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewSubscribersGetParams creates a new SubscribersGetParams object
// with the default values initialized.
func NewSubscribersGetParams() *SubscribersGetParams {
	var ()
	return &SubscribersGetParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewSubscribersGetParamsWithTimeout creates a new SubscribersGetParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewSubscribersGetParamsWithTimeout(timeout time.Duration) *SubscribersGetParams {
	var ()
	return &SubscribersGetParams{

		timeout: timeout,
	}
}

// NewSubscribersGetParamsWithContext creates a new SubscribersGetParams object
// with the default values initialized, and the ability to set a context for a request
func NewSubscribersGetParamsWithContext(ctx context.Context) *SubscribersGetParams {
	var ()
	return &SubscribersGetParams{

		Context: ctx,
	}
}

// NewSubscribersGetParamsWithHTTPClient creates a new SubscribersGetParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewSubscribersGetParamsWithHTTPClient(client *http.Client) *SubscribersGetParams {
	var ()
	return &SubscribersGetParams{
		HTTPClient: client,
	}
}

/*SubscribersGetParams contains all the parameters to send to the API endpoint
for the subscribers get operation typically these are written to a http.Request
*/
type SubscribersGetParams struct {

	/*Alias
	  Filter for subscribers who has specified alias.

	*/
	Alias string
	/*ContactID
	  Filter for subscribers of contracts with a specific contact id

	*/
	ContactID string
	/*CreateTimestampGt
	  Filter for subscriber with create_timestamp greater then specified value

	*/
	CreateTimestampGt string
	/*CreateTimestampLt
	  Filter for subscriber with create_timestamp less then specified value

	*/
	CreateTimestampLt string
	/*CustomerExternalID
	  Filter for subscribers of a specific customer external_id.

	*/
	CustomerExternalID string
	/*CustomerID
	  Filter for subscribers of a specific customer.

	*/
	CustomerID string
	/*Domain
	  Filter for subscribers in specific domain

	*/
	Domain string
	/*IsAdmin
	  Filter for subscribers who are (not) pbx subscriber admins.

	*/
	IsAdmin string
	/*IsPbxGroup
	  Filter for subscribers who are (not) pbx_groups.

	*/
	IsPbxGroup string
	/*IsPbxPilot
	  Filter for subscribers who are pbx pilot subscribers.

	*/
	IsPbxPilot string
	/*ModifyTimestampGt
	  Filter for subscriber with modify_timestamp greater then specified value

	*/
	ModifyTimestampGt string
	/*ModifyTimestampLt
	  Filter for subscriber with modify_timestamp less then specified value

	*/
	ModifyTimestampLt string
	/*OrderBy
	  Order collection by a specific attribute.

	*/
	OrderBy string
	/*OrderByDirection
	  Direction which the collection should be ordered by. Possible values are: asc (default), desc.

	*/
	OrderByDirection string
	/*Page
	  Pagination page which should be displayed (default: 1)

	*/
	Page string
	/*ProfileID
	  Search for subscribers having a specific subscriber profile

	*/
	ProfileID string
	/*ResellerID
	  Filter for subscribers of customers belonging to a specific reseller

	*/
	ResellerID string
	/*Rows
	  Number of rows in one pagination page (default: 10)

	*/
	Rows string
	/*SubscriberExternalID
	  Filter for subscribers by subscriber's external_id.

	*/
	SubscriberExternalID string
	/*Username
	  Search for specific SIP username

	*/
	Username string
	/*Webpassword
	  Search for specific webuser login password (exact match)

	*/
	Webpassword string
	/*Webusername
	  Search for specific webuser login credentials (exact match)

	*/
	Webusername string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the subscribers get params
func (o *SubscribersGetParams) WithTimeout(timeout time.Duration) *SubscribersGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the subscribers get params
func (o *SubscribersGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the subscribers get params
func (o *SubscribersGetParams) WithContext(ctx context.Context) *SubscribersGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the subscribers get params
func (o *SubscribersGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the subscribers get params
func (o *SubscribersGetParams) WithHTTPClient(client *http.Client) *SubscribersGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the subscribers get params
func (o *SubscribersGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAlias adds the alias to the subscribers get params
func (o *SubscribersGetParams) WithAlias(alias string) *SubscribersGetParams {
	o.SetAlias(alias)
	return o
}

// SetAlias adds the alias to the subscribers get params
func (o *SubscribersGetParams) SetAlias(alias string) {
	o.Alias = alias
}

// WithContactID adds the contactID to the subscribers get params
func (o *SubscribersGetParams) WithContactID(contactID string) *SubscribersGetParams {
	o.SetContactID(contactID)
	return o
}

// SetContactID adds the contactId to the subscribers get params
func (o *SubscribersGetParams) SetContactID(contactID string) {
	o.ContactID = contactID
}

// WithCreateTimestampGt adds the createTimestampGt to the subscribers get params
func (o *SubscribersGetParams) WithCreateTimestampGt(createTimestampGt string) *SubscribersGetParams {
	o.SetCreateTimestampGt(createTimestampGt)
	return o
}

// SetCreateTimestampGt adds the createTimestampGt to the subscribers get params
func (o *SubscribersGetParams) SetCreateTimestampGt(createTimestampGt string) {
	o.CreateTimestampGt = createTimestampGt
}

// WithCreateTimestampLt adds the createTimestampLt to the subscribers get params
func (o *SubscribersGetParams) WithCreateTimestampLt(createTimestampLt string) *SubscribersGetParams {
	o.SetCreateTimestampLt(createTimestampLt)
	return o
}

// SetCreateTimestampLt adds the createTimestampLt to the subscribers get params
func (o *SubscribersGetParams) SetCreateTimestampLt(createTimestampLt string) {
	o.CreateTimestampLt = createTimestampLt
}

// WithCustomerExternalID adds the customerExternalID to the subscribers get params
func (o *SubscribersGetParams) WithCustomerExternalID(customerExternalID string) *SubscribersGetParams {
	o.SetCustomerExternalID(customerExternalID)
	return o
}

// SetCustomerExternalID adds the customerExternalId to the subscribers get params
func (o *SubscribersGetParams) SetCustomerExternalID(customerExternalID string) {
	o.CustomerExternalID = customerExternalID
}

// WithCustomerID adds the customerID to the subscribers get params
func (o *SubscribersGetParams) WithCustomerID(customerID string) *SubscribersGetParams {
	o.SetCustomerID(customerID)
	return o
}

// SetCustomerID adds the customerId to the subscribers get params
func (o *SubscribersGetParams) SetCustomerID(customerID string) {
	o.CustomerID = customerID
}

// WithDomain adds the domain to the subscribers get params
func (o *SubscribersGetParams) WithDomain(domain string) *SubscribersGetParams {
	o.SetDomain(domain)
	return o
}

// SetDomain adds the domain to the subscribers get params
func (o *SubscribersGetParams) SetDomain(domain string) {
	o.Domain = domain
}

// WithIsAdmin adds the isAdmin to the subscribers get params
func (o *SubscribersGetParams) WithIsAdmin(isAdmin string) *SubscribersGetParams {
	o.SetIsAdmin(isAdmin)
	return o
}

// SetIsAdmin adds the isAdmin to the subscribers get params
func (o *SubscribersGetParams) SetIsAdmin(isAdmin string) {
	o.IsAdmin = isAdmin
}

// WithIsPbxGroup adds the isPbxGroup to the subscribers get params
func (o *SubscribersGetParams) WithIsPbxGroup(isPbxGroup string) *SubscribersGetParams {
	o.SetIsPbxGroup(isPbxGroup)
	return o
}

// SetIsPbxGroup adds the isPbxGroup to the subscribers get params
func (o *SubscribersGetParams) SetIsPbxGroup(isPbxGroup string) {
	o.IsPbxGroup = isPbxGroup
}

// WithIsPbxPilot adds the isPbxPilot to the subscribers get params
func (o *SubscribersGetParams) WithIsPbxPilot(isPbxPilot string) *SubscribersGetParams {
	o.SetIsPbxPilot(isPbxPilot)
	return o
}

// SetIsPbxPilot adds the isPbxPilot to the subscribers get params
func (o *SubscribersGetParams) SetIsPbxPilot(isPbxPilot string) {
	o.IsPbxPilot = isPbxPilot
}

// WithModifyTimestampGt adds the modifyTimestampGt to the subscribers get params
func (o *SubscribersGetParams) WithModifyTimestampGt(modifyTimestampGt string) *SubscribersGetParams {
	o.SetModifyTimestampGt(modifyTimestampGt)
	return o
}

// SetModifyTimestampGt adds the modifyTimestampGt to the subscribers get params
func (o *SubscribersGetParams) SetModifyTimestampGt(modifyTimestampGt string) {
	o.ModifyTimestampGt = modifyTimestampGt
}

// WithModifyTimestampLt adds the modifyTimestampLt to the subscribers get params
func (o *SubscribersGetParams) WithModifyTimestampLt(modifyTimestampLt string) *SubscribersGetParams {
	o.SetModifyTimestampLt(modifyTimestampLt)
	return o
}

// SetModifyTimestampLt adds the modifyTimestampLt to the subscribers get params
func (o *SubscribersGetParams) SetModifyTimestampLt(modifyTimestampLt string) {
	o.ModifyTimestampLt = modifyTimestampLt
}

// WithOrderBy adds the orderBy to the subscribers get params
func (o *SubscribersGetParams) WithOrderBy(orderBy string) *SubscribersGetParams {
	o.SetOrderBy(orderBy)
	return o
}

// SetOrderBy adds the orderBy to the subscribers get params
func (o *SubscribersGetParams) SetOrderBy(orderBy string) {
	o.OrderBy = orderBy
}

// WithOrderByDirection adds the orderByDirection to the subscribers get params
func (o *SubscribersGetParams) WithOrderByDirection(orderByDirection string) *SubscribersGetParams {
	o.SetOrderByDirection(orderByDirection)
	return o
}

// SetOrderByDirection adds the orderByDirection to the subscribers get params
func (o *SubscribersGetParams) SetOrderByDirection(orderByDirection string) {
	o.OrderByDirection = orderByDirection
}

// WithPage adds the page to the subscribers get params
func (o *SubscribersGetParams) WithPage(page string) *SubscribersGetParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the subscribers get params
func (o *SubscribersGetParams) SetPage(page string) {
	o.Page = page
}

// WithProfileID adds the profileID to the subscribers get params
func (o *SubscribersGetParams) WithProfileID(profileID string) *SubscribersGetParams {
	o.SetProfileID(profileID)
	return o
}

// SetProfileID adds the profileId to the subscribers get params
func (o *SubscribersGetParams) SetProfileID(profileID string) {
	o.ProfileID = profileID
}

// WithResellerID adds the resellerID to the subscribers get params
func (o *SubscribersGetParams) WithResellerID(resellerID string) *SubscribersGetParams {
	o.SetResellerID(resellerID)
	return o
}

// SetResellerID adds the resellerId to the subscribers get params
func (o *SubscribersGetParams) SetResellerID(resellerID string) {
	o.ResellerID = resellerID
}

// WithRows adds the rows to the subscribers get params
func (o *SubscribersGetParams) WithRows(rows string) *SubscribersGetParams {
	o.SetRows(rows)
	return o
}

// SetRows adds the rows to the subscribers get params
func (o *SubscribersGetParams) SetRows(rows string) {
	o.Rows = rows
}

// WithSubscriberExternalID adds the subscriberExternalID to the subscribers get params
func (o *SubscribersGetParams) WithSubscriberExternalID(subscriberExternalID string) *SubscribersGetParams {
	o.SetSubscriberExternalID(subscriberExternalID)
	return o
}

// SetSubscriberExternalID adds the subscriberExternalId to the subscribers get params
func (o *SubscribersGetParams) SetSubscriberExternalID(subscriberExternalID string) {
	o.SubscriberExternalID = subscriberExternalID
}

// WithUsername adds the username to the subscribers get params
func (o *SubscribersGetParams) WithUsername(username string) *SubscribersGetParams {
	o.SetUsername(username)
	return o
}

// SetUsername adds the username to the subscribers get params
func (o *SubscribersGetParams) SetUsername(username string) {
	o.Username = username
}

// WithWebpassword adds the webpassword to the subscribers get params
func (o *SubscribersGetParams) WithWebpassword(webpassword string) *SubscribersGetParams {
	o.SetWebpassword(webpassword)
	return o
}

// SetWebpassword adds the webpassword to the subscribers get params
func (o *SubscribersGetParams) SetWebpassword(webpassword string) {
	o.Webpassword = webpassword
}

// WithWebusername adds the webusername to the subscribers get params
func (o *SubscribersGetParams) WithWebusername(webusername string) *SubscribersGetParams {
	o.SetWebusername(webusername)
	return o
}

// SetWebusername adds the webusername to the subscribers get params
func (o *SubscribersGetParams) SetWebusername(webusername string) {
	o.Webusername = webusername
}

// WriteToRequest writes these params to a swagger request
func (o *SubscribersGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param alias
	qrAlias := o.Alias
	qAlias := qrAlias
	if qAlias != "" {
		if err := r.SetQueryParam("alias", qAlias); err != nil {
			return err
		}
	}

	// query param contact_id
	qrContactID := o.ContactID
	qContactID := qrContactID
	if qContactID != "" {
		if err := r.SetQueryParam("contact_id", qContactID); err != nil {
			return err
		}
	}

	// query param create_timestamp_gt
	qrCreateTimestampGt := o.CreateTimestampGt
	qCreateTimestampGt := qrCreateTimestampGt
	if qCreateTimestampGt != "" {
		if err := r.SetQueryParam("create_timestamp_gt", qCreateTimestampGt); err != nil {
			return err
		}
	}

	// query param create_timestamp_lt
	qrCreateTimestampLt := o.CreateTimestampLt
	qCreateTimestampLt := qrCreateTimestampLt
	if qCreateTimestampLt != "" {
		if err := r.SetQueryParam("create_timestamp_lt", qCreateTimestampLt); err != nil {
			return err
		}
	}

	// query param customer_external_id
	qrCustomerExternalID := o.CustomerExternalID
	qCustomerExternalID := qrCustomerExternalID
	if qCustomerExternalID != "" {
		if err := r.SetQueryParam("customer_external_id", qCustomerExternalID); err != nil {
			return err
		}
	}

	// query param customer_id
	qrCustomerID := o.CustomerID
	qCustomerID := qrCustomerID
	if qCustomerID != "" {
		if err := r.SetQueryParam("customer_id", qCustomerID); err != nil {
			return err
		}
	}

	// query param domain
	qrDomain := o.Domain
	qDomain := qrDomain
	if qDomain != "" {
		if err := r.SetQueryParam("domain", qDomain); err != nil {
			return err
		}
	}

	// query param is_admin
	qrIsAdmin := o.IsAdmin
	qIsAdmin := qrIsAdmin
	if qIsAdmin != "" {
		if err := r.SetQueryParam("is_admin", qIsAdmin); err != nil {
			return err
		}
	}

	// query param is_pbx_group
	qrIsPbxGroup := o.IsPbxGroup
	qIsPbxGroup := qrIsPbxGroup
	if qIsPbxGroup != "" {
		if err := r.SetQueryParam("is_pbx_group", qIsPbxGroup); err != nil {
			return err
		}
	}

	// query param is_pbx_pilot
	qrIsPbxPilot := o.IsPbxPilot
	qIsPbxPilot := qrIsPbxPilot
	if qIsPbxPilot != "" {
		if err := r.SetQueryParam("is_pbx_pilot", qIsPbxPilot); err != nil {
			return err
		}
	}

	// query param modify_timestamp_gt
	qrModifyTimestampGt := o.ModifyTimestampGt
	qModifyTimestampGt := qrModifyTimestampGt
	if qModifyTimestampGt != "" {
		if err := r.SetQueryParam("modify_timestamp_gt", qModifyTimestampGt); err != nil {
			return err
		}
	}

	// query param modify_timestamp_lt
	qrModifyTimestampLt := o.ModifyTimestampLt
	qModifyTimestampLt := qrModifyTimestampLt
	if qModifyTimestampLt != "" {
		if err := r.SetQueryParam("modify_timestamp_lt", qModifyTimestampLt); err != nil {
			return err
		}
	}

	// query param order_by
	qrOrderBy := o.OrderBy
	qOrderBy := qrOrderBy
	if qOrderBy != "" {
		if err := r.SetQueryParam("order_by", qOrderBy); err != nil {
			return err
		}
	}

	// query param order_by_direction
	qrOrderByDirection := o.OrderByDirection
	qOrderByDirection := qrOrderByDirection
	if qOrderByDirection != "" {
		if err := r.SetQueryParam("order_by_direction", qOrderByDirection); err != nil {
			return err
		}
	}

	// query param page
	qrPage := o.Page
	qPage := qrPage
	if qPage != "" {
		if err := r.SetQueryParam("page", qPage); err != nil {
			return err
		}
	}

	// query param profile_id
	qrProfileID := o.ProfileID
	qProfileID := qrProfileID
	if qProfileID != "" {
		if err := r.SetQueryParam("profile_id", qProfileID); err != nil {
			return err
		}
	}

	// query param reseller_id
	qrResellerID := o.ResellerID
	qResellerID := qrResellerID
	if qResellerID != "" {
		if err := r.SetQueryParam("reseller_id", qResellerID); err != nil {
			return err
		}
	}

	// query param rows
	qrRows := o.Rows
	qRows := qrRows
	if qRows != "" {
		if err := r.SetQueryParam("rows", qRows); err != nil {
			return err
		}
	}

	// query param subscriber_external_id
	qrSubscriberExternalID := o.SubscriberExternalID
	qSubscriberExternalID := qrSubscriberExternalID
	if qSubscriberExternalID != "" {
		if err := r.SetQueryParam("subscriber_external_id", qSubscriberExternalID); err != nil {
			return err
		}
	}

	// query param username
	qrUsername := o.Username
	qUsername := qrUsername
	if qUsername != "" {
		if err := r.SetQueryParam("username", qUsername); err != nil {
			return err
		}
	}

	// query param webpassword
	qrWebpassword := o.Webpassword
	qWebpassword := qrWebpassword
	if qWebpassword != "" {
		if err := r.SetQueryParam("webpassword", qWebpassword); err != nil {
			return err
		}
	}

	// query param webusername
	qrWebusername := o.Webusername
	qWebusername := qrWebusername
	if qWebusername != "" {
		if err := r.SetQueryParam("webusername", qWebusername); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
