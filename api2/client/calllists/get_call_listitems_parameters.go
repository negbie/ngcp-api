// Code generated by go-swagger; DO NOT EDIT.

package calllists

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetCallListitemsParams creates a new GetCallListitemsParams object
// with the default values initialized.
func NewGetCallListitemsParams() *GetCallListitemsParams {
	var ()
	return &GetCallListitemsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetCallListitemsParamsWithTimeout creates a new GetCallListitemsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetCallListitemsParamsWithTimeout(timeout time.Duration) *GetCallListitemsParams {
	var ()
	return &GetCallListitemsParams{

		timeout: timeout,
	}
}

// NewGetCallListitemsParamsWithContext creates a new GetCallListitemsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetCallListitemsParamsWithContext(ctx context.Context) *GetCallListitemsParams {
	var ()
	return &GetCallListitemsParams{

		Context: ctx,
	}
}

// NewGetCallListitemsParamsWithHTTPClient creates a new GetCallListitemsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetCallListitemsParamsWithHTTPClient(client *http.Client) *GetCallListitemsParams {
	var ()
	return &GetCallListitemsParams{
		HTTPClient: client,
	}
}

/*GetCallListitemsParams contains all the parameters to send to the API endpoint
for the get call listitems operation typically these are written to a http.Request
*/
type GetCallListitemsParams struct {

	/*AliasField
	  Set this parameter for example to "gpp0" if you store alias numbers in the gpp0 preference and want to have that value shown as other CLI for calls from or to such a local subscriber.

	*/
	AliasField string
	/*CallID
	  Filter for a particular call_id prefix and sort by call leg depth.

	*/
	CallID string
	/*CustomerID
	  Filter for calls for a specific customer. Either this or subscriber_id is mandatory if called by admin, reseller or subscriberadmin to filter list down to a specific customer. For calls within the same customer_id, the direction will always be "out".

	*/
	CustomerID string
	/*Direction
	  Filter for calls with a specific direction. One of "in", "out".

	*/
	Direction string
	/*InitGe
	  Filter for calls initiated greater or equal the specified time stamp.

	*/
	InitGe string
	/*InitLe
	  Filter for calls initiated lower or equal the specified time stamp.

	*/
	InitLe string
	/*OrderBy
	  Order collection by a specific attribute.

	*/
	OrderBy string
	/*OrderByDirection
	  Direction which the collection should be ordered by. Possible values are: asc (default), desc.

	*/
	OrderByDirection string
	/*OwnCli
	  Filter calls by a specific number that is a part of in or out calls.

	*/
	OwnCli string
	/*Page
	  Pagination page which should be displayed (default: 1)

	*/
	Page string
	/*RatingStatus
	  Filter for calls having a specific rating status. Comma separated list of "ok", "unrated", "failed".

	*/
	RatingStatus string
	/*RatingStatusNe
	  Filter for calls not having a specific rating status. Comma separated list of "ok", "unrated", "failed".

	*/
	RatingStatusNe string
	/*Rows
	  Number of rows in one pagination page (default: 10)

	*/
	Rows string
	/*StartGe
	  Filter for calls starting greater or equal the specified time stamp.

	*/
	StartGe string
	/*StartLe
	  Filter for calls starting lower or equal the specified time stamp.

	*/
	StartLe string
	/*Status
	  Filter for calls with a specific status. One of "ok", "busy", "noanswer", "cancel", "offline", "timeout", "other".

	*/
	Status string
	/*StatusNe
	  Filter for calls not having a specific status. One of "ok", "busy", "noanswer", "cancel", "offline", "timeout", "other".

	*/
	StatusNe string
	/*SubscriberID
	  Filter for calls for a specific subscriber. Either this or customer_id is mandatory if called by admin, reseller or subscriberadmin to filter list down to a specific subscriber in order to properly determine the direction of calls.

	*/
	SubscriberID string
	/*Type
	  Filter for calls with a specific type. One of "call", "cfu", "cfb", "cft", "cfna", "cfs", "cfr".

	*/
	Type string
	/*TypeNe
	  Filter for calls not having a specific type. One of "call", "cfu", "cfb", "cft", "cfna", "cfs", "cfr".

	*/
	TypeNe string
	/*Tz
	  Format start_time according to the optional time zone provided here, e.g. Europe/Berlin.

	*/
	Tz string
	/*UseOwnerTz
	  Format start_time according to the filtered customer's/subscribers's inherited time zone.

	*/
	UseOwnerTz string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get call listitems params
func (o *GetCallListitemsParams) WithTimeout(timeout time.Duration) *GetCallListitemsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get call listitems params
func (o *GetCallListitemsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get call listitems params
func (o *GetCallListitemsParams) WithContext(ctx context.Context) *GetCallListitemsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get call listitems params
func (o *GetCallListitemsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get call listitems params
func (o *GetCallListitemsParams) WithHTTPClient(client *http.Client) *GetCallListitemsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get call listitems params
func (o *GetCallListitemsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAliasField adds the aliasField to the get call listitems params
func (o *GetCallListitemsParams) WithAliasField(aliasField string) *GetCallListitemsParams {
	o.SetAliasField(aliasField)
	return o
}

// SetAliasField adds the aliasField to the get call listitems params
func (o *GetCallListitemsParams) SetAliasField(aliasField string) {
	o.AliasField = aliasField
}

// WithCallID adds the callID to the get call listitems params
func (o *GetCallListitemsParams) WithCallID(callID string) *GetCallListitemsParams {
	o.SetCallID(callID)
	return o
}

// SetCallID adds the callId to the get call listitems params
func (o *GetCallListitemsParams) SetCallID(callID string) {
	o.CallID = callID
}

// WithCustomerID adds the customerID to the get call listitems params
func (o *GetCallListitemsParams) WithCustomerID(customerID string) *GetCallListitemsParams {
	o.SetCustomerID(customerID)
	return o
}

// SetCustomerID adds the customerId to the get call listitems params
func (o *GetCallListitemsParams) SetCustomerID(customerID string) {
	o.CustomerID = customerID
}

// WithDirection adds the direction to the get call listitems params
func (o *GetCallListitemsParams) WithDirection(direction string) *GetCallListitemsParams {
	o.SetDirection(direction)
	return o
}

// SetDirection adds the direction to the get call listitems params
func (o *GetCallListitemsParams) SetDirection(direction string) {
	o.Direction = direction
}

// WithInitGe adds the initGe to the get call listitems params
func (o *GetCallListitemsParams) WithInitGe(initGe string) *GetCallListitemsParams {
	o.SetInitGe(initGe)
	return o
}

// SetInitGe adds the initGe to the get call listitems params
func (o *GetCallListitemsParams) SetInitGe(initGe string) {
	o.InitGe = initGe
}

// WithInitLe adds the initLe to the get call listitems params
func (o *GetCallListitemsParams) WithInitLe(initLe string) *GetCallListitemsParams {
	o.SetInitLe(initLe)
	return o
}

// SetInitLe adds the initLe to the get call listitems params
func (o *GetCallListitemsParams) SetInitLe(initLe string) {
	o.InitLe = initLe
}

// WithOrderBy adds the orderBy to the get call listitems params
func (o *GetCallListitemsParams) WithOrderBy(orderBy string) *GetCallListitemsParams {
	o.SetOrderBy(orderBy)
	return o
}

// SetOrderBy adds the orderBy to the get call listitems params
func (o *GetCallListitemsParams) SetOrderBy(orderBy string) {
	o.OrderBy = orderBy
}

// WithOrderByDirection adds the orderByDirection to the get call listitems params
func (o *GetCallListitemsParams) WithOrderByDirection(orderByDirection string) *GetCallListitemsParams {
	o.SetOrderByDirection(orderByDirection)
	return o
}

// SetOrderByDirection adds the orderByDirection to the get call listitems params
func (o *GetCallListitemsParams) SetOrderByDirection(orderByDirection string) {
	o.OrderByDirection = orderByDirection
}

// WithOwnCli adds the ownCli to the get call listitems params
func (o *GetCallListitemsParams) WithOwnCli(ownCli string) *GetCallListitemsParams {
	o.SetOwnCli(ownCli)
	return o
}

// SetOwnCli adds the ownCli to the get call listitems params
func (o *GetCallListitemsParams) SetOwnCli(ownCli string) {
	o.OwnCli = ownCli
}

// WithPage adds the page to the get call listitems params
func (o *GetCallListitemsParams) WithPage(page string) *GetCallListitemsParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the get call listitems params
func (o *GetCallListitemsParams) SetPage(page string) {
	o.Page = page
}

// WithRatingStatus adds the ratingStatus to the get call listitems params
func (o *GetCallListitemsParams) WithRatingStatus(ratingStatus string) *GetCallListitemsParams {
	o.SetRatingStatus(ratingStatus)
	return o
}

// SetRatingStatus adds the ratingStatus to the get call listitems params
func (o *GetCallListitemsParams) SetRatingStatus(ratingStatus string) {
	o.RatingStatus = ratingStatus
}

// WithRatingStatusNe adds the ratingStatusNe to the get call listitems params
func (o *GetCallListitemsParams) WithRatingStatusNe(ratingStatusNe string) *GetCallListitemsParams {
	o.SetRatingStatusNe(ratingStatusNe)
	return o
}

// SetRatingStatusNe adds the ratingStatusNe to the get call listitems params
func (o *GetCallListitemsParams) SetRatingStatusNe(ratingStatusNe string) {
	o.RatingStatusNe = ratingStatusNe
}

// WithRows adds the rows to the get call listitems params
func (o *GetCallListitemsParams) WithRows(rows string) *GetCallListitemsParams {
	o.SetRows(rows)
	return o
}

// SetRows adds the rows to the get call listitems params
func (o *GetCallListitemsParams) SetRows(rows string) {
	o.Rows = rows
}

// WithStartGe adds the startGe to the get call listitems params
func (o *GetCallListitemsParams) WithStartGe(startGe string) *GetCallListitemsParams {
	o.SetStartGe(startGe)
	return o
}

// SetStartGe adds the startGe to the get call listitems params
func (o *GetCallListitemsParams) SetStartGe(startGe string) {
	o.StartGe = startGe
}

// WithStartLe adds the startLe to the get call listitems params
func (o *GetCallListitemsParams) WithStartLe(startLe string) *GetCallListitemsParams {
	o.SetStartLe(startLe)
	return o
}

// SetStartLe adds the startLe to the get call listitems params
func (o *GetCallListitemsParams) SetStartLe(startLe string) {
	o.StartLe = startLe
}

// WithStatus adds the status to the get call listitems params
func (o *GetCallListitemsParams) WithStatus(status string) *GetCallListitemsParams {
	o.SetStatus(status)
	return o
}

// SetStatus adds the status to the get call listitems params
func (o *GetCallListitemsParams) SetStatus(status string) {
	o.Status = status
}

// WithStatusNe adds the statusNe to the get call listitems params
func (o *GetCallListitemsParams) WithStatusNe(statusNe string) *GetCallListitemsParams {
	o.SetStatusNe(statusNe)
	return o
}

// SetStatusNe adds the statusNe to the get call listitems params
func (o *GetCallListitemsParams) SetStatusNe(statusNe string) {
	o.StatusNe = statusNe
}

// WithSubscriberID adds the subscriberID to the get call listitems params
func (o *GetCallListitemsParams) WithSubscriberID(subscriberID string) *GetCallListitemsParams {
	o.SetSubscriberID(subscriberID)
	return o
}

// SetSubscriberID adds the subscriberId to the get call listitems params
func (o *GetCallListitemsParams) SetSubscriberID(subscriberID string) {
	o.SubscriberID = subscriberID
}

// WithType adds the typeVar to the get call listitems params
func (o *GetCallListitemsParams) WithType(typeVar string) *GetCallListitemsParams {
	o.SetType(typeVar)
	return o
}

// SetType adds the type to the get call listitems params
func (o *GetCallListitemsParams) SetType(typeVar string) {
	o.Type = typeVar
}

// WithTypeNe adds the typeNe to the get call listitems params
func (o *GetCallListitemsParams) WithTypeNe(typeNe string) *GetCallListitemsParams {
	o.SetTypeNe(typeNe)
	return o
}

// SetTypeNe adds the typeNe to the get call listitems params
func (o *GetCallListitemsParams) SetTypeNe(typeNe string) {
	o.TypeNe = typeNe
}

// WithTz adds the tz to the get call listitems params
func (o *GetCallListitemsParams) WithTz(tz string) *GetCallListitemsParams {
	o.SetTz(tz)
	return o
}

// SetTz adds the tz to the get call listitems params
func (o *GetCallListitemsParams) SetTz(tz string) {
	o.Tz = tz
}

// WithUseOwnerTz adds the useOwnerTz to the get call listitems params
func (o *GetCallListitemsParams) WithUseOwnerTz(useOwnerTz string) *GetCallListitemsParams {
	o.SetUseOwnerTz(useOwnerTz)
	return o
}

// SetUseOwnerTz adds the useOwnerTz to the get call listitems params
func (o *GetCallListitemsParams) SetUseOwnerTz(useOwnerTz string) {
	o.UseOwnerTz = useOwnerTz
}

// WriteToRequest writes these params to a swagger request
func (o *GetCallListitemsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param alias_field
	qrAliasField := o.AliasField
	qAliasField := qrAliasField
	if qAliasField != "" {
		if err := r.SetQueryParam("alias_field", qAliasField); err != nil {
			return err
		}
	}

	// query param call_id
	qrCallID := o.CallID
	qCallID := qrCallID
	if qCallID != "" {
		if err := r.SetQueryParam("call_id", qCallID); err != nil {
			return err
		}
	}

	// query param customer_id
	qrCustomerID := o.CustomerID
	qCustomerID := qrCustomerID
	if qCustomerID != "" {
		if err := r.SetQueryParam("customer_id", qCustomerID); err != nil {
			return err
		}
	}

	// query param direction
	qrDirection := o.Direction
	qDirection := qrDirection
	if qDirection != "" {
		if err := r.SetQueryParam("direction", qDirection); err != nil {
			return err
		}
	}

	// query param init_ge
	qrInitGe := o.InitGe
	qInitGe := qrInitGe
	if qInitGe != "" {
		if err := r.SetQueryParam("init_ge", qInitGe); err != nil {
			return err
		}
	}

	// query param init_le
	qrInitLe := o.InitLe
	qInitLe := qrInitLe
	if qInitLe != "" {
		if err := r.SetQueryParam("init_le", qInitLe); err != nil {
			return err
		}
	}

	// query param order_by
	qrOrderBy := o.OrderBy
	qOrderBy := qrOrderBy
	if qOrderBy != "" {
		if err := r.SetQueryParam("order_by", qOrderBy); err != nil {
			return err
		}
	}

	// query param order_by_direction
	qrOrderByDirection := o.OrderByDirection
	qOrderByDirection := qrOrderByDirection
	if qOrderByDirection != "" {
		if err := r.SetQueryParam("order_by_direction", qOrderByDirection); err != nil {
			return err
		}
	}

	// query param own_cli
	qrOwnCli := o.OwnCli
	qOwnCli := qrOwnCli
	if qOwnCli != "" {
		if err := r.SetQueryParam("own_cli", qOwnCli); err != nil {
			return err
		}
	}

	// query param page
	qrPage := o.Page
	qPage := qrPage
	if qPage != "" {
		if err := r.SetQueryParam("page", qPage); err != nil {
			return err
		}
	}

	// query param rating_status
	qrRatingStatus := o.RatingStatus
	qRatingStatus := qrRatingStatus
	if qRatingStatus != "" {
		if err := r.SetQueryParam("rating_status", qRatingStatus); err != nil {
			return err
		}
	}

	// query param rating_status_ne
	qrRatingStatusNe := o.RatingStatusNe
	qRatingStatusNe := qrRatingStatusNe
	if qRatingStatusNe != "" {
		if err := r.SetQueryParam("rating_status_ne", qRatingStatusNe); err != nil {
			return err
		}
	}

	// query param rows
	qrRows := o.Rows
	qRows := qrRows
	if qRows != "" {
		if err := r.SetQueryParam("rows", qRows); err != nil {
			return err
		}
	}

	// query param start_ge
	qrStartGe := o.StartGe
	qStartGe := qrStartGe
	if qStartGe != "" {
		if err := r.SetQueryParam("start_ge", qStartGe); err != nil {
			return err
		}
	}

	// query param start_le
	qrStartLe := o.StartLe
	qStartLe := qrStartLe
	if qStartLe != "" {
		if err := r.SetQueryParam("start_le", qStartLe); err != nil {
			return err
		}
	}

	// query param status
	qrStatus := o.Status
	qStatus := qrStatus
	if qStatus != "" {
		if err := r.SetQueryParam("status", qStatus); err != nil {
			return err
		}
	}

	// query param status_ne
	qrStatusNe := o.StatusNe
	qStatusNe := qrStatusNe
	if qStatusNe != "" {
		if err := r.SetQueryParam("status_ne", qStatusNe); err != nil {
			return err
		}
	}

	// query param subscriber_id
	qrSubscriberID := o.SubscriberID
	qSubscriberID := qrSubscriberID
	if qSubscriberID != "" {
		if err := r.SetQueryParam("subscriber_id", qSubscriberID); err != nil {
			return err
		}
	}

	// query param type
	qrType := o.Type
	qType := qrType
	if qType != "" {
		if err := r.SetQueryParam("type", qType); err != nil {
			return err
		}
	}

	// query param type_ne
	qrTypeNe := o.TypeNe
	qTypeNe := qrTypeNe
	if qTypeNe != "" {
		if err := r.SetQueryParam("type_ne", qTypeNe); err != nil {
			return err
		}
	}

	// query param tz
	qrTz := o.Tz
	qTz := qrTz
	if qTz != "" {
		if err := r.SetQueryParam("tz", qTz); err != nil {
			return err
		}
	}

	// query param use_owner_tz
	qrUseOwnerTz := o.UseOwnerTz
	qUseOwnerTz := qrUseOwnerTz
	if qUseOwnerTz != "" {
		if err := r.SetQueryParam("use_owner_tz", qUseOwnerTz); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
