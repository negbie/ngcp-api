// Code generated by go-swagger; DO NOT EDIT.

package lnpnumbers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetLnpNumberitemsParams creates a new GetLnpNumberitemsParams object
// with the default values initialized.
func NewGetLnpNumberitemsParams() *GetLnpNumberitemsParams {
	var ()
	return &GetLnpNumberitemsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetLnpNumberitemsParamsWithTimeout creates a new GetLnpNumberitemsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetLnpNumberitemsParamsWithTimeout(timeout time.Duration) *GetLnpNumberitemsParams {
	var ()
	return &GetLnpNumberitemsParams{

		timeout: timeout,
	}
}

// NewGetLnpNumberitemsParamsWithContext creates a new GetLnpNumberitemsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetLnpNumberitemsParamsWithContext(ctx context.Context) *GetLnpNumberitemsParams {
	var ()
	return &GetLnpNumberitemsParams{

		Context: ctx,
	}
}

// NewGetLnpNumberitemsParamsWithHTTPClient creates a new GetLnpNumberitemsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetLnpNumberitemsParamsWithHTTPClient(client *http.Client) *GetLnpNumberitemsParams {
	var ()
	return &GetLnpNumberitemsParams{
		HTTPClient: client,
	}
}

/*GetLnpNumberitemsParams contains all the parameters to send to the API endpoint
for the get lnp numberitems operation typically these are written to a http.Request
*/
type GetLnpNumberitemsParams struct {

	/*Actual
	  Filter for LNP numbers valid at the given timestamp (YYYY-MM-DD HH:mm:ss) or the current time

	*/
	Actual string
	/*CarrierID
	  Filter for LNP numbers belonging to a specific LNP carrier

	*/
	CarrierID string
	/*Number
	  Filter for LNP numbers with a specific number (wildcards possible)

	*/
	Number string
	/*OrderBy
	  Order collection by a specific attribute.

	*/
	OrderBy string
	/*OrderByDirection
	  Direction which the collection should be ordered by. Possible values are: asc (default), desc.

	*/
	OrderByDirection string
	/*Page
	  Pagination page which should be displayed (default: 1)

	*/
	Page string
	/*Rows
	  Number of rows in one pagination page (default: 10)

	*/
	Rows string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get lnp numberitems params
func (o *GetLnpNumberitemsParams) WithTimeout(timeout time.Duration) *GetLnpNumberitemsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get lnp numberitems params
func (o *GetLnpNumberitemsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get lnp numberitems params
func (o *GetLnpNumberitemsParams) WithContext(ctx context.Context) *GetLnpNumberitemsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get lnp numberitems params
func (o *GetLnpNumberitemsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get lnp numberitems params
func (o *GetLnpNumberitemsParams) WithHTTPClient(client *http.Client) *GetLnpNumberitemsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get lnp numberitems params
func (o *GetLnpNumberitemsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithActual adds the actual to the get lnp numberitems params
func (o *GetLnpNumberitemsParams) WithActual(actual string) *GetLnpNumberitemsParams {
	o.SetActual(actual)
	return o
}

// SetActual adds the actual to the get lnp numberitems params
func (o *GetLnpNumberitemsParams) SetActual(actual string) {
	o.Actual = actual
}

// WithCarrierID adds the carrierID to the get lnp numberitems params
func (o *GetLnpNumberitemsParams) WithCarrierID(carrierID string) *GetLnpNumberitemsParams {
	o.SetCarrierID(carrierID)
	return o
}

// SetCarrierID adds the carrierId to the get lnp numberitems params
func (o *GetLnpNumberitemsParams) SetCarrierID(carrierID string) {
	o.CarrierID = carrierID
}

// WithNumber adds the number to the get lnp numberitems params
func (o *GetLnpNumberitemsParams) WithNumber(number string) *GetLnpNumberitemsParams {
	o.SetNumber(number)
	return o
}

// SetNumber adds the number to the get lnp numberitems params
func (o *GetLnpNumberitemsParams) SetNumber(number string) {
	o.Number = number
}

// WithOrderBy adds the orderBy to the get lnp numberitems params
func (o *GetLnpNumberitemsParams) WithOrderBy(orderBy string) *GetLnpNumberitemsParams {
	o.SetOrderBy(orderBy)
	return o
}

// SetOrderBy adds the orderBy to the get lnp numberitems params
func (o *GetLnpNumberitemsParams) SetOrderBy(orderBy string) {
	o.OrderBy = orderBy
}

// WithOrderByDirection adds the orderByDirection to the get lnp numberitems params
func (o *GetLnpNumberitemsParams) WithOrderByDirection(orderByDirection string) *GetLnpNumberitemsParams {
	o.SetOrderByDirection(orderByDirection)
	return o
}

// SetOrderByDirection adds the orderByDirection to the get lnp numberitems params
func (o *GetLnpNumberitemsParams) SetOrderByDirection(orderByDirection string) {
	o.OrderByDirection = orderByDirection
}

// WithPage adds the page to the get lnp numberitems params
func (o *GetLnpNumberitemsParams) WithPage(page string) *GetLnpNumberitemsParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the get lnp numberitems params
func (o *GetLnpNumberitemsParams) SetPage(page string) {
	o.Page = page
}

// WithRows adds the rows to the get lnp numberitems params
func (o *GetLnpNumberitemsParams) WithRows(rows string) *GetLnpNumberitemsParams {
	o.SetRows(rows)
	return o
}

// SetRows adds the rows to the get lnp numberitems params
func (o *GetLnpNumberitemsParams) SetRows(rows string) {
	o.Rows = rows
}

// WriteToRequest writes these params to a swagger request
func (o *GetLnpNumberitemsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param actual
	qrActual := o.Actual
	qActual := qrActual
	if qActual != "" {
		if err := r.SetQueryParam("actual", qActual); err != nil {
			return err
		}
	}

	// query param carrier_id
	qrCarrierID := o.CarrierID
	qCarrierID := qrCarrierID
	if qCarrierID != "" {
		if err := r.SetQueryParam("carrier_id", qCarrierID); err != nil {
			return err
		}
	}

	// query param number
	qrNumber := o.Number
	qNumber := qrNumber
	if qNumber != "" {
		if err := r.SetQueryParam("number", qNumber); err != nil {
			return err
		}
	}

	// query param order_by
	qrOrderBy := o.OrderBy
	qOrderBy := qrOrderBy
	if qOrderBy != "" {
		if err := r.SetQueryParam("order_by", qOrderBy); err != nil {
			return err
		}
	}

	// query param order_by_direction
	qrOrderByDirection := o.OrderByDirection
	qOrderByDirection := qrOrderByDirection
	if qOrderByDirection != "" {
		if err := r.SetQueryParam("order_by_direction", qOrderByDirection); err != nil {
			return err
		}
	}

	// query param page
	qrPage := o.Page
	qPage := qrPage
	if qPage != "" {
		if err := r.SetQueryParam("page", qPage); err != nil {
			return err
		}
	}

	// query param rows
	qrRows := o.Rows
	qRows := qrRows
	if qRows != "" {
		if err := r.SetQueryParam("rows", qRows); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
